import { MessageContext, VK } from 'vk-io';
import axios from 'axios';
import { getNewsTemperature } from '../helpers/firebaseHelper';

const openaiApiKey = process.env.OPENAI_API_KEY || '';

const generateAbsurdNews = async (name: string, temperature: number): Promise<string> => {
    const prompt = `–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫—É—é –∞–±—Å—É—Ä–¥–Ω—É—é –∏ –Ω–µ–ª–µ–ø—É—é –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ "${name}".
–ù–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Å—Ç–∏–ª–µ —Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–æ–≤: —Å—é—Ä—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è, –Ω–æ –Ω–µ –æ–±–∏–¥–Ω–∞—è.
–ü—Ä–∏–º–µ—Ä: "${name} —Å–Ω–æ–≤–∞ –±—ã–ª –∑–∞–º–µ—á–µ–Ω –≤ —Ä–∞–π–æ–Ω–µ —Ö–ª–µ–±–Ω—ã—Ö 2D-–º—É–∂–µ–π. –ñ–∏—Ç–µ–ª–∏ –≤ —É–∂–∞—Å–µ." 
–°—Ç–∞—Ä–∞–π—Å—è –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π. –ò—Å–ø–æ–ª—å–∑—É–π –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –æ–±–æ—Ä–æ—Ç—ã, —Å—é–∂–µ—Ç—ã –∏ –ø–æ–≤–æ—Ä–æ—Ç—ã. –î–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –∫–∞–∂–¥–∞—è –Ω–æ–≤–æ—Å—Ç—å –±—ã–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π.
–ë–µ–∑ –∫–∞–≤—ã—á–µ–∫, –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.`;

    const res = await axios.post(
        'https://api.openai.com/v1/chat/completions',
        {
            model: 'gpt-4-turbo',
            messages: [{ role: 'user', content: prompt }],
            max_tokens: 60,
            temperature,
        },
        {
            headers: {
                Authorization: `Bearer ${openaiApiKey}`,
                'Content-Type': 'application/json',
            },
        }
    );

    return res.data.choices[0].message.content.trim().replace(/^"|"$/g, '');
};

export const handleNewsCommand = async (context: MessageContext, vk: VK) => {
    const chatId = context.chatId?.toString();
    if (!chatId) return;

    const messageText = context.text?.trim();
    if (!messageText) return;

    const parts = messageText.split(' ').slice(2);
    let targetName = parts.join(' ');

    if (context.replyMessage && !targetName) {
        const replyUserId = context.replyMessage.senderId;
        const replyUser = await vk.api.users.get({ user_ids: [replyUserId.toString()], lang: 'ru' });
        targetName = replyUser?.[0]?.first_name || '–ö—Ç–æ-—Ç–æ';
    }

    if (!targetName) {
        await context.send('–£–∫–∞–∂–∏ –∏–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–ì–ª–∏—Ç—á –Ω–æ–≤–æ—Å—Ç–∏ —Å–≥–ª—ã–ø–∞"');
        return;
    }

    const formattedName = targetName.includes(' –∏ ')
        ? targetName.split(' –∏ ').map(n => n.trim()).join(' –∏ ')
        : targetName.trim();

    try {
        const temperature = await getNewsTemperature(chatId);
        const news = await generateAbsurdNews(formattedName, temperature);
        await context.send(`üì∞ ${news}`);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
        await context.send('–ù–æ–≤–æ—Å—Ç–Ω–æ–π —Ç–µ–ª–µ–∫–∞–Ω–∞–ª –ö–†–´–°–ê-–¢–í –∫—Ä–∞—à–Ω—É–ª—Å—è. –£–≤–∏–¥–∏–º—Å—è –ø–æ–∑–∂–µ ü•≤');
    }
};
