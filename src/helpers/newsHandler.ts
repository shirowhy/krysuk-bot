import { MessageContext, VK } from 'vk-io';
import axios from 'axios';
import { getNewsTemperature } from '../helpers/firebaseHelper';

const openaiApiKey = process.env.OPENAI_API_KEY || '';

const generateAbsurdNews = async (nameInput: string, temperature: number): Promise<string> => {
    const names = nameInput.split(' –∏ ').map(n => n.trim());
    const isPair = names.length === 2;

    const [name1, name2] = names;
    const prompt = isPair
        ? `–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫—É—é, –∞–±—Å—É—Ä–¥–Ω—É—é –∏ –Ω–µ–ª–µ–ø—É—é –Ω–æ–≤–æ—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–≤—É—é—Ç –¥–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞: ${name1} –∏ ${name2}.
–§–æ—Ä–º–∞—Ç ‚Äî –∫–∞–∫ –ø–æ—Å—Ç –∏–∑ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞: —Å —Å—é—Ä—Ä–µ–∞–ª–∏–∑–º–æ–º, –º–µ–º–Ω–æ—Å—Ç—å—é –∏ –±—ã—Ç–æ–≤—ã–º –±–µ–∑—É–º–∏–µ–º.
–ò–∑–±–µ–≥–∞–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å—é–∂–µ—Ç–æ–≤, —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π, —Ç—É—Ä–Ω–∏—Ä–æ–≤, –º–µ–¥–∞–ª–µ–π –∏ —á–µ–º–ø–∏–æ–Ω–æ–≤ ‚Äî —ç—Ç–æ —Å–ª–∏—à–∫–æ–º —Å–∫—É—á–Ω–æ.
–°—Ç–∞—Ä–∞–π—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—ã–µ –ø–æ–≤–æ–¥—ã: –µ–¥–∞, –±—ã—Ç–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Å–æ—Ü—Å–µ—Ç–∏, –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, –∞–Ω–∏–º–µ, –∫–∏—Ç–∞–π—Å–∫–∏–µ –≥–∞—á–∏ –∏ –ø—Ä–æ—á—É—é —á—É—à—å.
–ü—Ä–∏–º–µ—Ä: "${name1} –Ω–µ –ø–æ–¥–µ–ª–∏–ª–∞ 2–î-–º—É–∂–∞ —Å ${name2} –∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–µ—Å—Ç–∏ —Å–æ–∑–¥–∞–ª–∞ —É–∂–∞—Å–Ω—ã–π –º–µ–º –æ –Ω–∏—Ö."
–ü–∏—à–∏ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–π. –ù–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π –∏ –Ω–µ–ª–µ–ø–æ–π.`
        : `–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫—É—é, –∞–±—Å—É—Ä–¥–Ω—É—é –∏ –Ω–µ–ª–µ–ø—É—é –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ ${name1}.
–§–æ—Ä–º–∞—Ç ‚Äî –∫–∞–∫ –ø–æ—Å—Ç –∏–∑ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–∞: —Å —Å—é—Ä—Ä–µ–∞–ª–∏–∑–º–æ–º, –º–µ–º–Ω–æ—Å—Ç—å—é –∏ –±—ã—Ç–æ–≤—ã–º –±–µ–∑—É–º–∏–µ–º.
–ò–∑–±–µ–≥–∞–π —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å—é–∂–µ—Ç–æ–≤, —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π, —Ç—É—Ä–Ω–∏—Ä–æ–≤, –º–µ–¥–∞–ª–µ–π –∏ —á–µ–º–ø–∏–æ–Ω–æ–≤ ‚Äî —ç—Ç–æ —Å–ª–∏—à–∫–æ–º —Å–∫—É—á–Ω–æ.
–°—Ç–∞—Ä–∞–π—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–∞–Ω–Ω—ã–µ –ø–æ–≤–æ–¥—ã: –µ–¥–∞, –±—ã—Ç–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Å–æ—Ü—Å–µ—Ç–∏, –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è, –∞–Ω–∏–º–µ, –∫–∏—Ç–∞–π—Å–∫–∏–µ –≥–∞—á–∏ –∏ –ø—Ä–æ—á—É—é —á—É—à—å.
–ü—Ä–∏–º–µ—Ä: "${name1} —Å–Ω–æ–≤–∞ –±—ã–ª –∑–∞–º–µ—á–µ–Ω –∑–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ–º –≥–µ–π—Å–∫–∏—Ö —Ñ–∞–Ω—Ñ–∏–∫–æ–≤. –ñ–∏—Ç–µ–ª–∏ –≥–æ—Ä–æ–¥–∫–∞ –≤ —É–∂–∞—Å–µ."
–ü–∏—à–∏ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–π. –ù–æ–≤–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π –∏ –Ω–µ–ª–µ–ø–æ–π.`;

    const res = await axios.post(
        'https://api.openai.com/v1/chat/completions',
        {
            model: 'gpt-4-turbo',
            messages: [{ role: 'user', content: prompt }],
            max_tokens: 100,
            temperature,
        },
        {
            headers: {
                Authorization: `Bearer ${openaiApiKey}`,
                'Content-Type': 'application/json',
            },
        }
    );

    const rawOutput = res.data.choices[0].message.content.trim().replace(/^"|"$/g, '');

    const dotMatches = [...rawOutput.matchAll(/\./g)];
    if (dotMatches.length >= 2) {
        const secondDotIndex = dotMatches[1].index! + 1;
        return rawOutput.slice(0, secondDotIndex).trim();
    }

    return rawOutput;
};

export const handleNewsCommand = async (context: MessageContext, vk: VK) => {
    const chatId = context.chatId?.toString();
    if (!chatId) return;

    const messageText = context.text?.trim();
    if (!messageText) return;

    const parts = messageText.split(' ').slice(2);
    let targetName = parts.join(' ');

    if (context.replyMessage && !targetName) {
        const replyUserId = context.replyMessage.senderId;
        const replyUser = await vk.api.users.get({ user_ids: [replyUserId.toString()], lang: 'ru' });
        targetName = replyUser?.[0]?.first_name || '–ö—Ç–æ-—Ç–æ';
    }

    if (!targetName) {
        await context.send('–£–∫–∞–∂–∏ –∏–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: "–ì–ª–∏—Ç—á –Ω–æ–≤–æ—Å—Ç–∏ —Å–≥–ª—ã–ø–∞"');
        return;
    }

    const formattedName = targetName.includes(' –∏ ')
        ? targetName.split(' –∏ ').map(n => n.trim()).join(' –∏ ')
        : targetName.trim();

    try {
        const temperature = await getNewsTemperature(chatId);
        const news = await generateAbsurdNews(formattedName, temperature);
        await context.send(`üì∞ ${news}`);
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:', err);
        await context.send('–ù–æ–≤–æ—Å—Ç–Ω–æ–π —Ç–µ–ª–µ–∫–∞–Ω–∞–ª –ö–†–´–°–ê-–¢–í –∫—Ä–∞—à–Ω—É–ª—Å—è. –£–≤–∏–¥–∏–º—Å—è –ø–æ–∑–∂–µ ü•≤');
    }
};
